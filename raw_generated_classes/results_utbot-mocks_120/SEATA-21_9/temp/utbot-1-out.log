Started UtBot Contest, classfileDir = /var/benchmarks/projects/seata/core/target/classes, classpathString=/var/benchmarks/projects/seata/core/target/classes:/var/benchmarks/projects/seata/core/target/seata-core-0.5.0.jar:/var/benchmarks/projects/./seata/core/target/dependency/mockito-core-2.23.4.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-agent-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/assertj-core-2.6.0.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-common-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/objenesis-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-discovery-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool2-2.4.2.jar:/var/benchmarks/projects/seata/core/target/dependency/junit-4.12.jar:/var/benchmarks/projects/seata/core/target/dependency/hamcrest-core-1.3.jar:/var/benchmarks/projects/seata/core/target/dependency/slf4j-api-1.7.22.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-config-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/netty-all-4.1.24.Final.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-lang-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/fastjson-1.2.48.jar:/var/benchmarks/projects/seata/core/target/dependency/config-1.2.1.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool-1.6.jar, outputDir=/home/utbot_mocks/temp/testcases, mocks=Other classes: Mockito
01:09:04.821 | INFO  | Started: warmup: kotlin reflection :: init
01:09:04.903 | INFO  | Finished (in 0.081 sec): warmup: kotlin reflection :: init 
[INIT]
>> [RUN] io.seata.core.rpc.netty.RmRpcClient 120
01:09:04.921 | DEBUG | -----------------------------------------------------------------------------
01:09:04.922 | INFO  | Contest.runGeneration: Time budget: 120000 ms, Generation timeout=102000 ms, classpath=/var/benchmarks/projects/seata/core/target/classes:/var/benchmarks/projects/seata/core/target/seata-core-0.5.0.jar:/var/benchmarks/projects/./seata/core/target/dependency/mockito-core-2.23.4.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-agent-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/assertj-core-2.6.0.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-common-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/objenesis-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-discovery-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool2-2.4.2.jar:/var/benchmarks/projects/seata/core/target/dependency/junit-4.12.jar:/var/benchmarks/projects/seata/core/target/dependency/hamcrest-core-1.3.jar:/var/benchmarks/projects/seata/core/target/dependency/slf4j-api-1.7.22.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-config-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/netty-all-4.1.24.Final.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-lang-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/fastjson-1.2.48.jar:/var/benchmarks/projects/seata/core/target/dependency/config-1.2.1.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool-1.6.jar, methodNameFilter=null
01:09:04.924 | INFO  | ClassUnderTest[ FQN: io.seata.core.rpc.netty.RmRpcClient
    classfileDir: /var/benchmarks/projects/seata/core/target/classes
    testClassSimpleName: RmRpcClientTest
    generatedTestFile: /home/utbot_mocks/temp/testcases/io/seata/core/rpc/netty/RmRpcClientTest.java
    generatedTestsSourcesDir: /home/utbot_mocks/temp/testcases
]
01:09:04.961 | INFO  | Started: class io.seata.core.rpc.netty.RmRpcClient
01:09:04.962 | INFO  | Started: preparation class class io.seata.core.rpc.netty.RmRpcClient: kotlin reflection :: run
01:09:05.194 | INFO  | Finished (in 0.231 sec): preparation class class io.seata.core.rpc.netty.RmRpcClient: kotlin reflection :: run 
01:09:05.195 | INFO  | Started: 2nd optional soot initialization
01:09:05.196 | INFO  | Finished (in 0.001 sec): 2nd optional soot initialization 
01:09:05.204 | DEBUG |  ... 
01:09:05.220 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.exceptionCaught(ChannelHandlerContext, Throwable)
01:09:05.221 | INFO  |  -- Remaining time budget: 101717 ms, #remaining_methods: 28, budget for method: 3632 ms, solver timeout: 1000 ms, budget for symbolic execution: 2432 ms, budget for concrete execution: 1200 ms,  -- 
01:09:05.638 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.exceptionCaught(ChannelHandlerContext, Throwable)1
01:09:06.517 | INFO  | Finished (in 1.296 sec): method io.seata.core.rpc.netty.RmRpcClient.exceptionCaught(ChannelHandlerContext, Throwable) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:06.546 | DEBUG |  ... 
01:09:06.547 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object)
01:09:06.547 | INFO  |  -- Remaining time budget: 100376 ms, #remaining_methods: 27, budget for method: 3717 ms, solver timeout: 1000 ms, budget for symbolic execution: 2517 ms, budget for concrete execution: 1200 ms,  -- 
01:09:06.562 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object)1
01:09:06.772 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object)2
01:09:06.998 | INFO  | Finished (in 0.451 sec): method io.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:09:07.008 | DEBUG |  ... 
01:09:07.008 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.connect(String)
01:09:07.009 | INFO  |  -- Remaining time budget: 99915 ms, #remaining_methods: 26, budget for method: 3842 ms, solver timeout: 1000 ms, budget for symbolic execution: 2642 ms, budget for concrete execution: 1200 ms,  -- 
01:09:07.028 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.connect(String)1
01:09:09.652 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.connect(String)
01:09:10.854 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.connect(String)
01:09:10.893 | INFO  | Finished (in 3.884 sec): method io.seata.core.rpc.netty.RmRpcClient.connect(String) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:11.061 | DEBUG |  ... 
01:09:11.062 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)
01:09:11.063 | INFO  |  -- Remaining time budget: 95861 ms, #remaining_methods: 25, budget for method: 3834 ms, solver timeout: 1000 ms, budget for symbolic execution: 2634 ms, budget for concrete execution: 1200 ms,  -- 
01:09:11.071 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)1
01:09:13.697 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)
01:09:14.897 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)
01:09:14.978 | INFO  | Finished (in 3.915 sec): method io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:15.139 | DEBUG |  ... 
01:09:15.139 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)
01:09:15.140 | INFO  |  -- Remaining time budget: 91784 ms, #remaining_methods: 24, budget for method: 3824 ms, solver timeout: 1000 ms, budget for symbolic execution: 2624 ms, budget for concrete execution: 1200 ms,  -- 
01:09:15.150 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)1
01:09:15.182 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)2
01:09:16.665 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)3
01:09:16.680 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)4
01:09:17.764 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)
01:09:18.964 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)
01:09:19.029 | INFO  | Finished (in 3.889 sec): method io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
01:09:19.240 | DEBUG |  ... 
01:09:19.241 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.init()
01:09:19.241 | INFO  |  -- Remaining time budget: 87682 ms, #remaining_methods: 23, budget for method: 3812 ms, solver timeout: 1000 ms, budget for symbolic execution: 2612 ms, budget for concrete execution: 1200 ms,  -- 
01:09:19.249 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.init()1
01:09:21.854 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.init()
01:09:23.054 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.init()
01:09:23.121 | INFO  | Finished (in 3.880 sec): method io.seata.core.rpc.netty.RmRpcClient.init() 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:23.386 | DEBUG |  ... 
01:09:23.387 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)
01:09:23.387 | INFO  |  -- Remaining time budget: 83537 ms, #remaining_methods: 22, budget for method: 3797 ms, solver timeout: 1000 ms, budget for symbolic execution: 2597 ms, budget for concrete execution: 1200 ms,  -- 
01:09:23.396 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)1
01:09:23.864 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)2
01:09:25.042 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)3
01:09:25.985 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)
01:09:27.186 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)
01:09:27.315 | INFO  | Finished (in 3.928 sec): method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
01:09:27.471 | DEBUG |  ... 
01:09:27.472 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)
01:09:27.472 | INFO  |  -- Remaining time budget: 79452 ms, #remaining_methods: 21, budget for method: 3783 ms, solver timeout: 1000 ms, budget for symbolic execution: 2583 ms, budget for concrete execution: 1200 ms,  -- 
01:09:27.484 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)1
01:09:27.671 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)2
01:09:27.756 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)3
01:09:28.068 | INFO  | Finished (in 0.596 sec): method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
01:09:28.096 | DEBUG |  ... 
01:09:28.096 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)
01:09:28.097 | INFO  |  -- Remaining time budget: 78827 ms, #remaining_methods: 20, budget for method: 3941 ms, solver timeout: 1000 ms, budget for symbolic execution: 2741 ms, budget for concrete execution: 1200 ms,  -- 
01:09:28.219 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ChildProcessError: Error in the child process |> java.util.concurrent.TimeoutException: Timeout 100 elapsed
	at com.huawei.utbot.instrumentation.instrumentation.InvokeInstrumentation.invoke-d1pmJ48(InvokeInstrumentation.kt:75)
	at com.huawei.utbot.instrumentation.instrumentation.InvokeInstrumentation.invoke(InvokeInstrumentation.kt:22)
	at com.huawei.utbot.instrumentation.instrumentation.Instrumentation$DefaultImpls.invoke$default(Instrumentation.kt:25)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:146)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.withStaticFields(UtExecutionInstrumentation.kt:225)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:137)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.loop(ChildProcess.kt:114)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt:76)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt)

	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:391) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
01:09:29.607 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)1
01:09:29.911 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)2
01:09:30.838 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)
01:09:32.039 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)
01:09:32.139 | INFO  | Finished (in 4.043 sec): method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long) 
<StatsForMethod> :
	#generatedTC=2
	FAILED 1 time(s) with 1 different exception(s)"
01:09:32.319 | DEBUG |  ... 
01:09:32.320 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)
01:09:32.320 | INFO  |  -- Remaining time budget: 74603 ms, #remaining_methods: 19, budget for method: 3926 ms, solver timeout: 1000 ms, budget for symbolic execution: 2726 ms, budget for concrete execution: 1200 ms,  -- 
01:09:32.330 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)1
01:09:35.046 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)
01:09:36.247 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)
01:09:36.370 | INFO  | Finished (in 4.050 sec): method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:36.553 | DEBUG |  ... 
01:09:36.554 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)
01:09:36.554 | INFO  |  -- Remaining time budget: 70370 ms, #remaining_methods: 18, budget for method: 3909 ms, solver timeout: 1000 ms, budget for symbolic execution: 2709 ms, budget for concrete execution: 1200 ms,  -- 
01:09:36.671 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ChildProcessError: Error in the child process |> java.util.concurrent.TimeoutException: Timeout 100 elapsed
	at com.huawei.utbot.instrumentation.instrumentation.InvokeInstrumentation.invoke-d1pmJ48(InvokeInstrumentation.kt:75)
	at com.huawei.utbot.instrumentation.instrumentation.InvokeInstrumentation.invoke(InvokeInstrumentation.kt:22)
	at com.huawei.utbot.instrumentation.instrumentation.Instrumentation$DefaultImpls.invoke$default(Instrumentation.kt:25)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:146)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.withStaticFields(UtExecutionInstrumentation.kt:225)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:137)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.loop(ChildProcess.kt:114)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt:76)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt)

	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:391) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
01:09:38.112 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)1
01:09:39.264 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)
01:09:39.301 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)2
01:09:40.465 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)
01:09:40.587 | INFO  | Finished (in 4.033 sec): method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object) 
<StatsForMethod> :
	#generatedTC=2
	FAILED 1 time(s) with 1 different exception(s)"
01:09:40.746 | DEBUG |  ... 
01:09:40.747 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig()
01:09:40.747 | INFO  |  -- Remaining time budget: 66176 ms, #remaining_methods: 17, budget for method: 3892 ms, solver timeout: 1000 ms, budget for symbolic execution: 2692 ms, budget for concrete execution: 1200 ms,  -- 
01:09:40.754 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig()1
01:09:40.819 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig()2
01:09:40.820 | INFO  | Finished (in 0.072 sec): method io.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:09:40.825 | DEBUG |  ... 
01:09:40.826 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getTransactionRole()
01:09:40.826 | INFO  |  -- Remaining time budget: 66097 ms, #remaining_methods: 16, budget for method: 4131 ms, solver timeout: 1000 ms, budget for symbolic execution: 2931 ms, budget for concrete execution: 1200 ms,  -- 
01:09:40.840 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getTransactionRole()1
01:09:40.924 | INFO  | Finished (in 0.098 sec): method io.seata.core.rpc.netty.RmRpcClient.getTransactionRole() 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:40.933 | DEBUG |  ... 
01:09:40.934 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)
01:09:40.934 | INFO  |  -- Remaining time budget: 65989 ms, #remaining_methods: 15, budget for method: 4399 ms, solver timeout: 1000 ms, budget for symbolic execution: 3199 ms, budget for concrete execution: 1200 ms,  -- 
01:09:40.941 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)1
01:09:40.985 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)2
01:09:41.008 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)3
01:09:42.492 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)4
01:09:42.708 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)5
01:09:44.133 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)
01:09:45.334 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)
01:09:45.427 | INFO  | Finished (in 4.493 sec): method io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String) 
<StatsForMethod> :
	#generatedTC=5
	WITH NO EXCEPTIONS
01:09:45.539 | DEBUG |  ... 
01:09:45.540 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager)
01:09:45.541 | INFO  |  -- Remaining time budget: 61383 ms, #remaining_methods: 14, budget for method: 4384 ms, solver timeout: 1000 ms, budget for symbolic execution: 3184 ms, budget for concrete execution: 1200 ms,  -- 
01:09:45.546 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager)1
01:09:45.574 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager)2
01:09:45.574 | INFO  | Finished (in 0.034 sec): method io.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:09:45.576 | DEBUG |  ... 
01:09:45.576 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setApplicationId(String)
01:09:45.577 | INFO  |  -- Remaining time budget: 61347 ms, #remaining_methods: 13, budget for method: 4719 ms, solver timeout: 1000 ms, budget for symbolic execution: 3519 ms, budget for concrete execution: 1200 ms,  -- 
01:09:45.582 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setApplicationId(String)1
01:09:45.615 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setApplicationId(String)2
01:09:45.615 | INFO  | Finished (in 0.039 sec): method io.seata.core.rpc.netty.RmRpcClient.setApplicationId(String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:09:45.616 | DEBUG |  ... 
01:09:45.617 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String)
01:09:45.617 | INFO  |  -- Remaining time budget: 61306 ms, #remaining_methods: 12, budget for method: 5108 ms, solver timeout: 1000 ms, budget for symbolic execution: 3908 ms, budget for concrete execution: 1200 ms,  -- 
01:09:45.625 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String)1
01:09:45.651 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String)2
01:09:45.652 | INFO  | Finished (in 0.034 sec): method io.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:09:45.653 | DEBUG |  ... 
01:09:45.653 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.doConnect(String)
01:09:45.654 | INFO  |  -- Remaining time budget: 61270 ms, #remaining_methods: 11, budget for method: 5570 ms, solver timeout: 1000 ms, budget for symbolic execution: 4370 ms, budget for concrete execution: 1200 ms,  -- 
01:09:45.661 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.doConnect(String)1
01:09:50.024 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.doConnect(String)
01:09:51.225 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.doConnect(String)
01:09:51.275 | INFO  | Finished (in 5.620 sec): method io.seata.core.rpc.netty.RmRpcClient.doConnect(String) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
01:09:51.463 | DEBUG |  ... 
01:09:51.464 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)
01:09:51.464 | INFO  |  -- Remaining time budget: 55460 ms, #remaining_methods: 10, budget for method: 5546 ms, solver timeout: 1000 ms, budget for symbolic execution: 4346 ms, budget for concrete execution: 1200 ms,  -- 
01:09:51.472 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)1
01:09:51.501 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)2
01:09:51.522 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)3
01:09:51.566 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)4
01:09:51.785 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)5
01:09:53.616 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)6
01:09:55.811 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)
01:09:57.012 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)
01:09:57.067 | INFO  | Finished (in 5.602 sec): method io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String) 
<StatsForMethod> :
	#generatedTC=6
	WITH NO EXCEPTIONS
01:09:57.299 | DEBUG |  ... 
01:09:57.300 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendRegisterMessage(String, Channel, String)
01:09:57.300 | INFO  |  -- Remaining time budget: 49623 ms, #remaining_methods: 9, budget for method: 5513 ms, solver timeout: 1000 ms, budget for symbolic execution: 4313 ms, budget for concrete execution: 1200 ms,  -- 
01:09:57.309 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendRegisterMessage(String, Channel, String)1
01:09:58.621 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ChildProcessError: Error in the child process |> java.lang.IllegalStateException: No field $__is_mock_null in class java.nio.ByteBuffer
	at com.huawei.utbot.framework.concrete.MethodMockController.<init>(MethodMockController.kt:38)
	at com.huawei.utbot.framework.concrete.MockValueConstructor.mockMethods(MockValueConstructor.kt:245)
	at com.huawei.utbot.framework.concrete.MockValueConstructor.mockStaticMethods(MockValueConstructor.kt:263)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:139)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.withStaticFields(UtExecutionInstrumentation.kt:225)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:137)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.loop(ChildProcess.kt:114)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt:76)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt)

	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:391) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
01:09:58.751 | ERROR | Symbolic execution FAILED ... <<stack trace duplicated>>
01:09:58.752 | INFO  | Finished (in 1.452 sec): method io.seata.core.rpc.netty.RmRpcClient.sendRegisterMessage(String, Channel, String) 
<StatsForMethod> :
	#generatedTC=1
	FAILED 2 time(s) with 1 different exception(s)"
01:09:58.770 | DEBUG |  ... 
01:09:58.770 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)
01:09:58.771 | INFO  |  -- Remaining time budget: 48153 ms, #remaining_methods: 8, budget for method: 6019 ms, solver timeout: 1000 ms, budget for symbolic execution: 4819 ms, budget for concrete execution: 1200 ms,  -- 
01:09:58.781 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)1
01:09:59.572 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)2
01:09:59.756 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)3
01:10:03.590 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)
01:10:04.790 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)
01:10:04.876 | INFO  | Finished (in 6.106 sec): method io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
01:10:05.142 | DEBUG |  ... 
01:10:05.143 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getCustomerKeys()
01:10:05.143 | INFO  |  -- Remaining time budget: 41781 ms, #remaining_methods: 7, budget for method: 5968 ms, solver timeout: 1000 ms, budget for symbolic execution: 4768 ms, budget for concrete execution: 1200 ms,  -- 
01:10:05.149 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getCustomerKeys()1
01:10:05.184 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getCustomerKeys()2
01:10:05.185 | INFO  | Finished (in 0.041 sec): method io.seata.core.rpc.netty.RmRpcClient.getCustomerKeys() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:10:05.185 | DEBUG |  ... 
01:10:05.186 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String)
01:10:05.186 | INFO  |  -- Remaining time budget: 41737 ms, #remaining_methods: 6, budget for method: 6956 ms, solver timeout: 1000 ms, budget for symbolic execution: 5756 ms, budget for concrete execution: 1200 ms,  -- 
01:10:05.199 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String)1
01:10:05.224 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String)2
01:10:05.225 | INFO  | Finished (in 0.038 sec): method io.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:10:05.226 | DEBUG |  ... 
01:10:05.226 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)
01:10:05.226 | INFO  |  -- Remaining time budget: 41697 ms, #remaining_methods: 5, budget for method: 8339 ms, solver timeout: 1000 ms, budget for symbolic execution: 7139 ms, budget for concrete execution: 1200 ms,  -- 
01:10:05.236 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)1
01:10:05.261 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)2
01:10:05.284 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)3
01:10:12.366 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)
01:10:13.568 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)
01:10:13.981 | INFO  | Finished (in 8.754 sec): method io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
01:10:14.186 | DEBUG |  ... 
01:10:14.186 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getInstance(String, String)
01:10:14.187 | INFO  |  -- Remaining time budget: 32737 ms, #remaining_methods: 4, budget for method: 8184 ms, solver timeout: 1000 ms, budget for symbolic execution: 6984 ms, budget for concrete execution: 1200 ms,  -- 
01:10:14.194 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance(String, String)1
01:10:14.342 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance(String, String)2
01:10:14.342 | INFO  | Finished (in 0.155 sec): method io.seata.core.rpc.netty.RmRpcClient.getInstance(String, String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:10:14.357 | DEBUG |  ... 
01:10:14.357 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getInstance()
01:10:14.357 | INFO  |  -- Remaining time budget: 32566 ms, #remaining_methods: 3, budget for method: 10855 ms, solver timeout: 1000 ms, budget for symbolic execution: 9655 ms, budget for concrete execution: 1200 ms,  -- 
01:10:14.362 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance()1
01:10:14.428 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance()2
01:10:14.474 | INFO  | Finished (in 0.117 sec): method io.seata.core.rpc.netty.RmRpcClient.getInstance() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
01:10:14.486 | DEBUG |  ... 
01:10:14.487 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig, EventExecutorGroup, ThreadPoolExecutor)
01:10:14.487 | INFO  |  -- Remaining time budget: 32436 ms, #remaining_methods: 2, budget for method: 16218 ms, solver timeout: 1000 ms, budget for symbolic execution: 15018 ms, budget for concrete execution: 1200 ms,  -- 
01:10:14.509 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ReadingFromKryoException: Failure reading from kryo
	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:392) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
Caused by: com.esotericsoftware.kryo.KryoException: Buffer underflow.
	at com.esotericsoftware.kryo.io.Input.require(Input.java:219) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.io.Input.readVarLong(Input.java:570) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:131) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:125) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:774) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.util.KryoHelper.readLong(KryoHelper.kt:36) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1$1.invokeSuspend(ConcreteExecutor.kt:256) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:38) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:253) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:101) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.concurrent.ThreadsKt$thread$thread$1.run(Thread.kt:30) ~[utbot-junit-contest-1.0.jar:?]
01:10:15.420 | INFO  | Finished (in 0.932 sec): method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig, EventExecutorGroup, ThreadPoolExecutor) 
<StatsForMethod> :
	#generatedTC=0
	FAILED 1 time(s) with 1 different exception(s)"
01:10:15.472 | DEBUG |  ... 
01:10:15.472 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig)
01:10:15.472 | INFO  |  -- Remaining time budget: 31451 ms, #remaining_methods: 1, budget for method: 31451 ms, solver timeout: 1000 ms, budget for symbolic execution: 30251 ms, budget for concrete execution: 1200 ms,  -- 
01:10:21.720 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ReadingFromKryoException: Failure reading from kryo
	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:392) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
Caused by: com.esotericsoftware.kryo.KryoException: Buffer underflow.
	at com.esotericsoftware.kryo.io.Input.require(Input.java:219) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.io.Input.readVarLong(Input.java:570) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:131) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:125) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:774) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.util.KryoHelper.readLong(KryoHelper.kt:36) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1$1.invokeSuspend(ConcreteExecutor.kt:256) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:38) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:253) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:101) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.concurrent.ThreadsKt$thread$thread$1.run(Thread.kt:30) ~[utbot-junit-contest-1.0.jar:?]
01:10:22.539 | INFO  | Finished (in 7.067 sec): method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig) 
<StatsForMethod> :
	#generatedTC=0
	FAILED 1 time(s) with 1 different exception(s)"
01:10:22.618 | INFO  | Started: Flushing tests for [RmRpcClient] on disk
01:10:22.954 | INFO  | File size for RmRpcClientTest: 60 KB
01:10:22.956 | INFO  | Finished (in 0.338 sec): Flushing tests for [RmRpcClient] on disk 
01:10:22.957 | INFO  | Finished (in 77.996 sec): class io.seata.core.rpc.netty.RmRpcClient 
<StatsForClass> :
	canceled by timeout = false
	#methods = 28, 
	#methods started symbolic exploration = 28
	#methods with at least one TC = 26
	#methods with exceptions = 5
	#generated TC = 57
	#coverage = null
[READY]
