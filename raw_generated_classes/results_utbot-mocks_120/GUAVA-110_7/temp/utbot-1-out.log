Started UtBot Contest, classfileDir = /var/benchmarks/projects/guava/guava/target/classes, classpathString=/var/benchmarks/projects/guava/guava/target/classes:/var/benchmarks/projects/guava/guava/target/guava-26.0-jre.jar:/var/benchmarks/projects/./guava/guava/target/dependency/checker-qual-2.5.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/error_prone_annotations-2.1.3.jar:/var/benchmarks/projects/guava/guava/target/dependency/j2objc-annotations-1.1.jar:/var/benchmarks/projects/guava/guava/target/dependency/jsr305-3.0.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/animal-sniffer-annotations-1.14.jar, outputDir=/home/utbot_mocks/temp/testcases, mocks=Other classes: Mockito
22:46:36.770 | INFO  | Started: warmup: kotlin reflection :: init
22:46:36.844 | INFO  | Finished (in 0.074 sec): warmup: kotlin reflection :: init 
[INIT]
>> [RUN] com.google.common.math.IntMath 120
22:46:36.852 | DEBUG | -----------------------------------------------------------------------------
22:46:36.852 | INFO  | Contest.runGeneration: Time budget: 120000 ms, Generation timeout=102000 ms, classpath=/var/benchmarks/projects/guava/guava/target/classes:/var/benchmarks/projects/guava/guava/target/guava-26.0-jre.jar:/var/benchmarks/projects/./guava/guava/target/dependency/checker-qual-2.5.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/error_prone_annotations-2.1.3.jar:/var/benchmarks/projects/guava/guava/target/dependency/j2objc-annotations-1.1.jar:/var/benchmarks/projects/guava/guava/target/dependency/jsr305-3.0.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/animal-sniffer-annotations-1.14.jar, methodNameFilter=null
22:46:36.853 | INFO  | ClassUnderTest[ FQN: com.google.common.math.IntMath
    classfileDir: /var/benchmarks/projects/guava/guava/target/classes
    testClassSimpleName: IntMathTest
    generatedTestFile: /home/utbot_mocks/temp/testcases/com/google/common/math/IntMathTest.java
    generatedTestsSourcesDir: /home/utbot_mocks/temp/testcases
]
22:46:36.874 | INFO  | Started: class com.google.common.math.IntMath
22:46:36.875 | INFO  | Started: preparation class class com.google.common.math.IntMath: kotlin reflection :: run
22:46:36.892 | INFO  | Finished (in 0.017 sec): preparation class class com.google.common.math.IntMath: kotlin reflection :: run 
22:46:36.893 | INFO  | Started: 2nd optional soot initialization
22:46:36.895 | INFO  | Finished (in 0.001 sec): 2nd optional soot initialization 
22:46:36.903 | DEBUG |  ... 
22:46:36.913 | INFO  | Started: method com.google.common.math.IntMath.log2(int, RoundingMode)
22:46:36.914 | INFO  |  -- Remaining time budget: 101948 ms, #remaining_methods: 26, budget for method: 3921 ms, solver timeout: 1000 ms, budget for symbolic execution: 2721 ms, budget for concrete execution: 1200 ms,  -- 
22:46:37.226 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log2(int, RoundingMode)1
22:46:38.908 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log2(int, RoundingMode)2
22:46:39.631 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.log2(int, RoundingMode)
22:46:40.833 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.log2(int, RoundingMode)
22:46:41.051 | INFO  | Finished (in 4.138 sec): method com.google.common.math.IntMath.log2(int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:46:41.058 | DEBUG |  ... 
22:46:41.059 | INFO  | Started: method com.google.common.math.IntMath.gcd(int, int)
22:46:41.060 | INFO  |  -- Remaining time budget: 97794 ms, #remaining_methods: 25, budget for method: 3911 ms, solver timeout: 1000 ms, budget for symbolic execution: 2711 ms, budget for concrete execution: 1200 ms,  -- 
22:46:41.066 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)1
22:46:41.117 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)2
22:46:41.118 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)3
22:46:42.374 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)4
22:46:43.771 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.gcd(int, int)
22:46:44.971 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.gcd(int, int)
22:46:45.176 | INFO  | Finished (in 4.117 sec): method com.google.common.math.IntMath.gcd(int, int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:46:45.268 | DEBUG |  ... 
22:46:45.268 | INFO  | Started: method com.google.common.math.IntMath.mod(int, int)
22:46:45.269 | INFO  |  -- Remaining time budget: 93585 ms, #remaining_methods: 24, budget for method: 3899 ms, solver timeout: 1000 ms, budget for symbolic execution: 2699 ms, budget for concrete execution: 1200 ms,  -- 
22:46:45.277 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)1
22:46:45.326 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)2
22:46:45.422 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)3
22:46:45.434 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)4
22:46:45.435 | INFO  | Finished (in 0.166 sec): method com.google.common.math.IntMath.mod(int, int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:46:45.436 | DEBUG |  ... 
22:46:45.436 | INFO  | Started: method com.google.common.math.IntMath.sqrt(int, RoundingMode)
22:46:45.436 | INFO  |  -- Remaining time budget: 93417 ms, #remaining_methods: 23, budget for method: 4061 ms, solver timeout: 1000 ms, budget for symbolic execution: 2861 ms, budget for concrete execution: 1200 ms,  -- 
22:46:45.447 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrt(int, RoundingMode)1
22:46:48.298 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.sqrt(int, RoundingMode)
22:46:49.498 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.sqrt(int, RoundingMode)
22:46:49.526 | INFO  | Finished (in 4.090 sec): method com.google.common.math.IntMath.sqrt(int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:46:49.546 | DEBUG |  ... 
22:46:49.547 | INFO  | Started: method com.google.common.math.IntMath.log10(int, RoundingMode)
22:46:49.547 | INFO  |  -- Remaining time budget: 89306 ms, #remaining_methods: 22, budget for method: 4059 ms, solver timeout: 1000 ms, budget for symbolic execution: 2859 ms, budget for concrete execution: 1200 ms,  -- 
22:46:49.554 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10(int, RoundingMode)1
22:46:51.478 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10(int, RoundingMode)2
22:46:52.406 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.log10(int, RoundingMode)
22:46:53.607 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.log10(int, RoundingMode)
22:46:53.772 | INFO  | Finished (in 4.224 sec): method com.google.common.math.IntMath.log10(int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:46:53.883 | DEBUG |  ... 
22:46:53.884 | INFO  | Started: method com.google.common.math.IntMath.pow(int, int)
22:46:53.885 | INFO  |  -- Remaining time budget: 84969 ms, #remaining_methods: 21, budget for method: 4046 ms, solver timeout: 1000 ms, budget for symbolic execution: 2846 ms, budget for concrete execution: 1200 ms,  -- 
22:46:53.890 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)1
22:46:53.961 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)2
22:46:53.983 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)3
22:46:53.987 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)4
22:46:54.006 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)5
22:46:54.027 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)6
22:46:54.029 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)7
22:46:54.033 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)8
22:46:54.055 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)9
22:46:54.091 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)10
22:46:54.099 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)11
22:46:54.117 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)12
22:46:54.122 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)13
22:46:54.124 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)14
22:46:54.145 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)15
22:46:54.149 | INFO  | Finished (in 0.264 sec): method com.google.common.math.IntMath.pow(int, int) 
<StatsForMethod> :
	#generatedTC=15
	WITH NO EXCEPTIONS
22:46:54.151 | DEBUG |  ... 
22:46:54.151 | INFO  | Started: method com.google.common.math.IntMath.divide(int, int, RoundingMode)
22:46:54.151 | INFO  |  -- Remaining time budget: 84702 ms, #remaining_methods: 20, budget for method: 4235 ms, solver timeout: 1000 ms, budget for symbolic execution: 3035 ms, budget for concrete execution: 1200 ms,  -- 
22:46:54.164 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)1
22:46:54.376 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)2
22:46:54.550 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)3
22:46:57.187 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.divide(int, int, RoundingMode)
22:46:58.170 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)4
22:46:58.387 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.divide(int, int, RoundingMode)
22:47:01.247 | INFO  | Finished (in 7.095 sec): method com.google.common.math.IntMath.divide(int, int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:47:01.534 | DEBUG |  ... 
22:47:01.535 | INFO  | Started: method com.google.common.math.IntMath.saturatedAdd(int, int)
22:47:01.535 | INFO  |  -- Remaining time budget: 77318 ms, #remaining_methods: 19, budget for method: 4069 ms, solver timeout: 1000 ms, budget for symbolic execution: 2869 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.543 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedAdd(int, int)1
22:47:01.564 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedAdd(int, int)2
22:47:01.564 | INFO  | Finished (in 0.029 sec): method com.google.common.math.IntMath.saturatedAdd(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:01.565 | DEBUG |  ... 
22:47:01.565 | INFO  | Started: method com.google.common.math.IntMath.saturatedSubtract(int, int)
22:47:01.565 | INFO  |  -- Remaining time budget: 77288 ms, #remaining_methods: 18, budget for method: 4293 ms, solver timeout: 1000 ms, budget for symbolic execution: 3093 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.571 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedSubtract(int, int)1
22:47:01.591 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedSubtract(int, int)2
22:47:01.591 | INFO  | Finished (in 0.026 sec): method com.google.common.math.IntMath.saturatedSubtract(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:01.592 | DEBUG |  ... 
22:47:01.593 | INFO  | Started: method com.google.common.math.IntMath.floorPowerOfTwo(int)
22:47:01.593 | INFO  |  -- Remaining time budget: 77261 ms, #remaining_methods: 17, budget for method: 4544 ms, solver timeout: 1000 ms, budget for symbolic execution: 3344 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.599 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.floorPowerOfTwo(int)1
22:47:01.626 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.floorPowerOfTwo(int)2
22:47:01.627 | INFO  | Finished (in 0.034 sec): method com.google.common.math.IntMath.floorPowerOfTwo(int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:01.630 | DEBUG |  ... 
22:47:01.631 | INFO  | Started: method com.google.common.math.IntMath.ceilingPowerOfTwo(int)
22:47:01.631 | INFO  |  -- Remaining time budget: 77222 ms, #remaining_methods: 16, budget for method: 4826 ms, solver timeout: 1000 ms, budget for symbolic execution: 3626 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.638 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.ceilingPowerOfTwo(int)1
22:47:01.679 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.ceilingPowerOfTwo(int)2
22:47:01.845 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.ceilingPowerOfTwo(int)3
22:47:01.861 | INFO  | Finished (in 0.229 sec): method com.google.common.math.IntMath.ceilingPowerOfTwo(int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:47:01.868 | DEBUG |  ... 
22:47:01.868 | INFO  | Started: method com.google.common.math.IntMath.isPowerOfTwo(int)
22:47:01.869 | INFO  |  -- Remaining time budget: 76985 ms, #remaining_methods: 15, budget for method: 5132 ms, solver timeout: 1000 ms, budget for symbolic execution: 3932 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.874 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)1
22:47:01.910 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)2
22:47:01.929 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)3
22:47:01.947 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)4
22:47:01.950 | INFO  | Finished (in 0.081 sec): method com.google.common.math.IntMath.isPowerOfTwo(int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:47:01.951 | DEBUG |  ... 
22:47:01.951 | INFO  | Started: method com.google.common.math.IntMath.lessThanBranchFree(int, int)
22:47:01.951 | INFO  |  -- Remaining time budget: 76902 ms, #remaining_methods: 14, budget for method: 5493 ms, solver timeout: 1000 ms, budget for symbolic execution: 4293 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.955 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.lessThanBranchFree(int, int)1
22:47:01.982 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.lessThanBranchFree(int, int)2
22:47:01.982 | INFO  | Finished (in 0.031 sec): method com.google.common.math.IntMath.lessThanBranchFree(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:01.983 | DEBUG |  ... 
22:47:01.983 | INFO  | Started: method com.google.common.math.IntMath.log10Floor(int)
22:47:01.984 | INFO  |  -- Remaining time budget: 76870 ms, #remaining_methods: 13, budget for method: 5913 ms, solver timeout: 1000 ms, budget for symbolic execution: 4713 ms, budget for concrete execution: 1200 ms,  -- 
22:47:01.988 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10Floor(int)1
22:47:06.417 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10Floor(int)2
22:47:06.446 | INFO  | Finished (in 4.462 sec): method com.google.common.math.IntMath.log10Floor(int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:06.539 | DEBUG |  ... 
22:47:06.539 | INFO  | Started: method com.google.common.math.IntMath.sqrtFloor(int)
22:47:06.539 | INFO  |  -- Remaining time budget: 72314 ms, #remaining_methods: 12, budget for method: 6026 ms, solver timeout: 1000 ms, budget for symbolic execution: 4826 ms, budget for concrete execution: 1200 ms,  -- 
22:47:06.544 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrtFloor(int)1
22:47:10.504 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrtFloor(int)2
22:47:11.209 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrtFloor(int)3
22:47:11.210 | INFO  | Finished (in 4.670 sec): method com.google.common.math.IntMath.sqrtFloor(int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:47:11.243 | DEBUG |  ... 
22:47:11.243 | INFO  | Started: method com.google.common.math.IntMath.checkedAdd(int, int)
22:47:11.244 | INFO  |  -- Remaining time budget: 67610 ms, #remaining_methods: 11, budget for method: 6146 ms, solver timeout: 1000 ms, budget for symbolic execution: 4946 ms, budget for concrete execution: 1200 ms,  -- 
22:47:11.248 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedAdd(int, int)1
22:47:11.298 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedAdd(int, int)2
22:47:11.304 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedAdd(int, int)3
22:47:11.305 | INFO  | Finished (in 0.061 sec): method com.google.common.math.IntMath.checkedAdd(int, int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:47:11.306 | DEBUG |  ... 
22:47:11.306 | INFO  | Started: method com.google.common.math.IntMath.checkedSubtract(int, int)
22:47:11.306 | INFO  |  -- Remaining time budget: 67547 ms, #remaining_methods: 10, budget for method: 6754 ms, solver timeout: 1000 ms, budget for symbolic execution: 5554 ms, budget for concrete execution: 1200 ms,  -- 
22:47:11.310 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedSubtract(int, int)1
22:47:11.359 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedSubtract(int, int)2
22:47:11.366 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedSubtract(int, int)3
22:47:11.367 | INFO  | Finished (in 0.060 sec): method com.google.common.math.IntMath.checkedSubtract(int, int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:47:11.367 | DEBUG |  ... 
22:47:11.368 | INFO  | Started: method com.google.common.math.IntMath.checkedMultiply(int, int)
22:47:11.368 | INFO  |  -- Remaining time budget: 67485 ms, #remaining_methods: 9, budget for method: 7498 ms, solver timeout: 1000 ms, budget for symbolic execution: 6298 ms, budget for concrete execution: 1200 ms,  -- 
22:47:11.373 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedMultiply(int, int)1
22:47:12.486 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedMultiply(int, int)2
22:47:12.486 | INFO  | Finished (in 1.118 sec): method com.google.common.math.IntMath.checkedMultiply(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:12.487 | DEBUG |  ... 
22:47:12.487 | INFO  | Started: method com.google.common.math.IntMath.checkedPow(int, int)
22:47:12.488 | INFO  |  -- Remaining time budget: 66366 ms, #remaining_methods: 8, budget for method: 8295 ms, solver timeout: 1000 ms, budget for symbolic execution: 7095 ms, budget for concrete execution: 1200 ms,  -- 
22:47:12.492 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)1
22:47:12.557 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)2
22:47:12.577 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)3
22:47:12.594 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)4
22:47:12.615 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)5
22:47:12.650 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)6
22:47:12.673 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)7
22:47:12.678 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)8
22:47:12.700 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)9
22:47:12.752 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)10
22:47:12.757 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)11
22:47:12.761 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)12
22:47:12.884 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)13
22:47:13.000 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)14
22:47:13.159 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)15
22:47:14.439 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)16
22:47:18.008 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)17
22:47:19.583 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.checkedPow(int, int)
22:47:20.785 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.checkedPow(int, int)
22:47:21.005 | INFO  | Finished (in 8.518 sec): method com.google.common.math.IntMath.checkedPow(int, int) 
<StatsForMethod> :
	#generatedTC=17
	WITH NO EXCEPTIONS
22:47:21.060 | DEBUG |  ... 
22:47:21.061 | INFO  | Started: method com.google.common.math.IntMath.saturatedMultiply(int, int)
22:47:21.061 | INFO  |  -- Remaining time budget: 57793 ms, #remaining_methods: 7, budget for method: 8256 ms, solver timeout: 1000 ms, budget for symbolic execution: 7056 ms, budget for concrete execution: 1200 ms,  -- 
22:47:21.064 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedMultiply(int, int)1
22:47:21.084 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedMultiply(int, int)2
22:47:21.085 | INFO  | Finished (in 0.024 sec): method com.google.common.math.IntMath.saturatedMultiply(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:21.086 | DEBUG |  ... 
22:47:21.086 | INFO  | Started: method com.google.common.math.IntMath.saturatedPow(int, int)
22:47:21.087 | INFO  |  -- Remaining time budget: 57767 ms, #remaining_methods: 6, budget for method: 9627 ms, solver timeout: 1000 ms, budget for symbolic execution: 8427 ms, budget for concrete execution: 1200 ms,  -- 
22:47:21.090 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)1
22:47:21.156 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)2
22:47:21.202 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)3
22:47:21.207 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)4
22:47:21.213 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)5
22:47:21.232 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)6
22:47:21.240 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)7
22:47:21.256 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)8
22:47:21.289 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)9
22:47:21.326 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)10
22:47:21.327 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)11
22:47:21.351 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)12
22:47:21.356 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)13
22:47:21.361 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)14
22:47:21.389 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)15
22:47:21.466 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)16
22:47:21.538 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)17
22:47:29.514 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.saturatedPow(int, int)
22:47:30.714 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.saturatedPow(int, int)
22:47:31.661 | INFO  | Finished (in 10.575 sec): method com.google.common.math.IntMath.saturatedPow(int, int) 
<StatsForMethod> :
	#generatedTC=17
	WITH NO EXCEPTIONS
22:47:31.714 | DEBUG |  ... 
22:47:31.715 | INFO  | Started: method com.google.common.math.IntMath.factorial(int)
22:47:31.715 | INFO  |  -- Remaining time budget: 47139 ms, #remaining_methods: 5, budget for method: 9427 ms, solver timeout: 1000 ms, budget for symbolic execution: 8227 ms, budget for concrete execution: 1200 ms,  -- 
22:47:31.718 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)1
22:47:31.823 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)2
22:47:31.849 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)3
22:47:31.874 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)4
22:47:31.874 | INFO  | Finished (in 0.159 sec): method com.google.common.math.IntMath.factorial(int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:47:31.882 | DEBUG |  ... 
22:47:31.882 | INFO  | Started: method com.google.common.math.IntMath.binomial(int, int)
22:47:31.883 | INFO  |  -- Remaining time budget: 46971 ms, #remaining_methods: 4, budget for method: 11742 ms, solver timeout: 1000 ms, budget for symbolic execution: 10542 ms, budget for concrete execution: 1200 ms,  -- 
22:47:31.889 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)1
22:47:32.286 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)2
22:47:33.344 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)3
22:47:34.413 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)4
22:47:38.671 | INFO  | Finished (in 6.788 sec): method com.google.common.math.IntMath.binomial(int, int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:47:38.718 | DEBUG |  ... 
22:47:38.718 | INFO  | Started: method com.google.common.math.IntMath.mean(int, int)
22:47:38.718 | INFO  |  -- Remaining time budget: 40135 ms, #remaining_methods: 3, budget for method: 13378 ms, solver timeout: 1000 ms, budget for symbolic execution: 12178 ms, budget for concrete execution: 1200 ms,  -- 
22:47:38.722 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mean(int, int)1
22:47:38.743 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mean(int, int)2
22:47:38.743 | INFO  | Finished (in 0.025 sec): method com.google.common.math.IntMath.mean(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:38.744 | DEBUG |  ... 
22:47:38.744 | INFO  | Started: method com.google.common.math.IntMath.isPrime(int)
22:47:38.744 | INFO  |  -- Remaining time budget: 40109 ms, #remaining_methods: 2, budget for method: 20054 ms, solver timeout: 1000 ms, budget for symbolic execution: 18854 ms, budget for concrete execution: 1200 ms,  -- 
22:47:38.750 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPrime(int)1
22:47:38.775 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPrime(int)2
22:47:38.776 | INFO  | Finished (in 0.031 sec): method com.google.common.math.IntMath.isPrime(int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:38.776 | DEBUG |  ... 
22:47:38.777 | INFO  | Started: method com.google.common.math.IntMath.<init>()
22:47:38.777 | INFO  |  -- Remaining time budget: 40076 ms, #remaining_methods: 1, budget for method: 40076 ms, solver timeout: 1000 ms, budget for symbolic execution: 38876 ms, budget for concrete execution: 1200 ms,  -- 
22:47:38.781 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.<init>()1
22:47:38.805 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.<init>()2
22:47:38.805 | INFO  | Finished (in 0.028 sec): method com.google.common.math.IntMath.<init>() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:47:38.812 | INFO  | Started: Flushing tests for [IntMath] on disk
22:47:39.160 | INFO  | File size for IntMathTest: 55 KB
22:47:39.161 | INFO  | Finished (in 0.349 sec): Flushing tests for [IntMath] on disk 
22:47:39.162 | INFO  | Finished (in 62.287 sec): class com.google.common.math.IntMath 
<StatsForClass> :
	canceled by timeout = false
	#methods = 26, 
	#methods started symbolic exploration = 26
	#methods with at least one TC = 26
	#methods with exceptions = 0
	#generated TC = 110
	#coverage = null
[READY]
