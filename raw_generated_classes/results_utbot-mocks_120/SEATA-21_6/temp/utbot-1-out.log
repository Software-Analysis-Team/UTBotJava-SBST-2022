Started UtBot Contest, classfileDir = /var/benchmarks/projects/seata/core/target/classes, classpathString=/var/benchmarks/projects/seata/core/target/classes:/var/benchmarks/projects/seata/core/target/seata-core-0.5.0.jar:/var/benchmarks/projects/./seata/core/target/dependency/mockito-core-2.23.4.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-agent-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/assertj-core-2.6.0.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-common-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/objenesis-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-discovery-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool2-2.4.2.jar:/var/benchmarks/projects/seata/core/target/dependency/junit-4.12.jar:/var/benchmarks/projects/seata/core/target/dependency/hamcrest-core-1.3.jar:/var/benchmarks/projects/seata/core/target/dependency/slf4j-api-1.7.22.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-config-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/netty-all-4.1.24.Final.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-lang-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/fastjson-1.2.48.jar:/var/benchmarks/projects/seata/core/target/dependency/config-1.2.1.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool-1.6.jar, outputDir=/home/utbot_mocks/temp/testcases, mocks=Other classes: Mockito
22:01:09.292 | INFO  | Started: warmup: kotlin reflection :: init
22:01:09.373 | INFO  | Finished (in 0.080 sec): warmup: kotlin reflection :: init 
[INIT]
>> [RUN] io.seata.core.rpc.netty.RmRpcClient 120
22:01:09.398 | DEBUG | -----------------------------------------------------------------------------
22:01:09.399 | INFO  | Contest.runGeneration: Time budget: 120000 ms, Generation timeout=102000 ms, classpath=/var/benchmarks/projects/seata/core/target/classes:/var/benchmarks/projects/seata/core/target/seata-core-0.5.0.jar:/var/benchmarks/projects/./seata/core/target/dependency/mockito-core-2.23.4.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-agent-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/assertj-core-2.6.0.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-common-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/byte-buddy-1.9.3.jar:/var/benchmarks/projects/seata/core/target/dependency/objenesis-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-discovery-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool2-2.4.2.jar:/var/benchmarks/projects/seata/core/target/dependency/junit-4.12.jar:/var/benchmarks/projects/seata/core/target/dependency/hamcrest-core-1.3.jar:/var/benchmarks/projects/seata/core/target/dependency/slf4j-api-1.7.22.jar:/var/benchmarks/projects/seata/core/target/dependency/seata-config-core-0.5.0.jar:/var/benchmarks/projects/seata/core/target/dependency/netty-all-4.1.24.Final.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-lang-2.6.jar:/var/benchmarks/projects/seata/core/target/dependency/fastjson-1.2.48.jar:/var/benchmarks/projects/seata/core/target/dependency/config-1.2.1.jar:/var/benchmarks/projects/seata/core/target/dependency/commons-pool-1.6.jar, methodNameFilter=null
22:01:09.401 | INFO  | ClassUnderTest[ FQN: io.seata.core.rpc.netty.RmRpcClient
    classfileDir: /var/benchmarks/projects/seata/core/target/classes
    testClassSimpleName: RmRpcClientTest
    generatedTestFile: /home/utbot_mocks/temp/testcases/io/seata/core/rpc/netty/RmRpcClientTest.java
    generatedTestsSourcesDir: /home/utbot_mocks/temp/testcases
]
22:01:09.435 | INFO  | Started: class io.seata.core.rpc.netty.RmRpcClient
22:01:09.436 | INFO  | Started: preparation class class io.seata.core.rpc.netty.RmRpcClient: kotlin reflection :: run
22:01:09.670 | INFO  | Finished (in 0.234 sec): preparation class class io.seata.core.rpc.netty.RmRpcClient: kotlin reflection :: run 
22:01:09.671 | INFO  | Started: 2nd optional soot initialization
22:01:09.673 | INFO  | Finished (in 0.001 sec): 2nd optional soot initialization 
22:01:09.683 | DEBUG |  ... 
22:01:09.704 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.exceptionCaught(ChannelHandlerContext, Throwable)
22:01:09.705 | INFO  |  -- Remaining time budget: 101715 ms, #remaining_methods: 28, budget for method: 3632 ms, solver timeout: 1000 ms, budget for symbolic execution: 2432 ms, budget for concrete execution: 1200 ms,  -- 
22:01:10.104 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.exceptionCaught(ChannelHandlerContext, Throwable)1
22:01:10.923 | INFO  | Finished (in 1.219 sec): method io.seata.core.rpc.netty.RmRpcClient.exceptionCaught(ChannelHandlerContext, Throwable) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:10.951 | DEBUG |  ... 
22:01:10.952 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object)
22:01:10.952 | INFO  |  -- Remaining time budget: 100449 ms, #remaining_methods: 27, budget for method: 3720 ms, solver timeout: 1000 ms, budget for symbolic execution: 2520 ms, budget for concrete execution: 1200 ms,  -- 
22:01:10.966 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object)1
22:01:11.189 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object)2
22:01:11.400 | INFO  | Finished (in 0.448 sec): method io.seata.core.rpc.netty.RmRpcClient.userEventTriggered(ChannelHandlerContext, Object) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:01:11.409 | DEBUG |  ... 
22:01:11.410 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.connect(String)
22:01:11.410 | INFO  |  -- Remaining time budget: 99990 ms, #remaining_methods: 26, budget for method: 3845 ms, solver timeout: 1000 ms, budget for symbolic execution: 2645 ms, budget for concrete execution: 1200 ms,  -- 
22:01:11.617 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.connect(String)1
22:01:14.056 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.connect(String)
22:01:15.258 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.connect(String)
22:01:15.299 | INFO  | Finished (in 3.888 sec): method io.seata.core.rpc.netty.RmRpcClient.connect(String) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:15.474 | DEBUG |  ... 
22:01:15.475 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.init()
22:01:15.475 | INFO  |  -- Remaining time budget: 95926 ms, #remaining_methods: 25, budget for method: 3837 ms, solver timeout: 1000 ms, budget for symbolic execution: 2637 ms, budget for concrete execution: 1200 ms,  -- 
22:01:15.482 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.init()1
22:01:18.112 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.init()
22:01:19.313 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.init()
22:01:19.383 | INFO  | Finished (in 3.908 sec): method io.seata.core.rpc.netty.RmRpcClient.init() 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:19.654 | DEBUG |  ... 
22:01:19.655 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)
22:01:19.655 | INFO  |  -- Remaining time budget: 91746 ms, #remaining_methods: 24, budget for method: 3822 ms, solver timeout: 1000 ms, budget for symbolic execution: 2622 ms, budget for concrete execution: 1200 ms,  -- 
22:01:19.663 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)1
22:01:22.277 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)
22:01:23.478 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object)
22:01:23.569 | INFO  | Finished (in 3.913 sec): method io.seata.core.rpc.netty.RmRpcClient.sendResponse(long, String, Object) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:23.723 | DEBUG |  ... 
22:01:23.724 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)
22:01:23.725 | INFO  |  -- Remaining time budget: 87676 ms, #remaining_methods: 23, budget for method: 3812 ms, solver timeout: 1000 ms, budget for symbolic execution: 2612 ms, budget for concrete execution: 1200 ms,  -- 
22:01:23.734 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)1
22:01:23.763 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)2
22:01:25.280 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)3
22:01:25.294 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)4
22:01:26.337 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)
22:01:27.537 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel)
22:01:27.582 | INFO  | Finished (in 3.857 sec): method io.seata.core.rpc.netty.RmRpcClient.destroyChannel(String, Channel) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:01:27.776 | DEBUG |  ... 
22:01:27.776 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)
22:01:27.777 | INFO  |  -- Remaining time budget: 83624 ms, #remaining_methods: 22, budget for method: 3801 ms, solver timeout: 1000 ms, budget for symbolic execution: 2601 ms, budget for concrete execution: 1200 ms,  -- 
22:01:27.786 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)1
22:01:28.217 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)2
22:01:29.341 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)3
22:01:30.378 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)
22:01:31.530 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)4
22:01:31.580 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage)
22:01:31.646 | INFO  | Finished (in 3.869 sec): method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgSuccess(String, Channel, Object, AbstractMessage) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
22:01:31.801 | DEBUG |  ... 
22:01:31.802 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)
22:01:31.802 | INFO  |  -- Remaining time budget: 79599 ms, #remaining_methods: 21, budget for method: 3790 ms, solver timeout: 1000 ms, budget for symbolic execution: 2590 ms, budget for concrete execution: 1200 ms,  -- 
22:01:31.812 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)1
22:01:32.001 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)2
22:01:32.097 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage)3
22:01:32.402 | INFO  | Finished (in 0.600 sec): method io.seata.core.rpc.netty.RmRpcClient.onRegisterMsgFail(String, Channel, Object, AbstractMessage) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:01:32.429 | DEBUG |  ... 
22:01:32.430 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)
22:01:32.430 | INFO  |  -- Remaining time budget: 78971 ms, #remaining_methods: 20, budget for method: 3948 ms, solver timeout: 1000 ms, budget for symbolic execution: 2748 ms, budget for concrete execution: 1200 ms,  -- 
22:01:32.555 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ChildProcessError: Error in the child process |> java.util.concurrent.TimeoutException: Timeout 100 elapsed
	at com.huawei.utbot.instrumentation.instrumentation.InvokeInstrumentation.invoke-d1pmJ48(InvokeInstrumentation.kt:75)
	at com.huawei.utbot.instrumentation.instrumentation.InvokeInstrumentation.invoke(InvokeInstrumentation.kt:22)
	at com.huawei.utbot.instrumentation.instrumentation.Instrumentation$DefaultImpls.invoke$default(Instrumentation.kt:25)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:146)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.withStaticFields(UtExecutionInstrumentation.kt:225)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:137)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.loop(ChildProcess.kt:114)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt:76)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt)

	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:391) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
22:01:34.034 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)1
22:01:35.178 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)
22:01:35.211 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)2
22:01:36.379 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object)
22:01:36.463 | INFO  | Finished (in 4.032 sec): method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object) 
<StatsForMethod> :
	#generatedTC=2
	FAILED 1 time(s) with 1 different exception(s)"
22:01:36.624 | DEBUG |  ... 
22:01:36.625 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)
22:01:36.625 | INFO  |  -- Remaining time budget: 74776 ms, #remaining_methods: 19, budget for method: 3935 ms, solver timeout: 1000 ms, budget for symbolic execution: 2735 ms, budget for concrete execution: 1200 ms,  -- 
22:01:36.632 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)1
22:01:39.360 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)
22:01:40.561 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long)
22:01:40.669 | INFO  | Finished (in 4.044 sec): method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(String, Object, long) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:40.844 | DEBUG |  ... 
22:01:40.844 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)
22:01:40.845 | INFO  |  -- Remaining time budget: 70556 ms, #remaining_methods: 18, budget for method: 3919 ms, solver timeout: 1000 ms, budget for symbolic execution: 2719 ms, budget for concrete execution: 1200 ms,  -- 
22:01:40.856 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)1
22:01:42.132 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)2
22:01:42.444 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)3
22:01:43.565 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)
22:01:44.765 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long)
22:01:44.855 | INFO  | Finished (in 4.010 sec): method io.seata.core.rpc.netty.RmRpcClient.sendMsgWithResponse(Object, long) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:01:45.037 | DEBUG |  ... 
22:01:45.038 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig()
22:01:45.038 | INFO  |  -- Remaining time budget: 66362 ms, #remaining_methods: 17, budget for method: 3903 ms, solver timeout: 1000 ms, budget for symbolic execution: 2703 ms, budget for concrete execution: 1200 ms,  -- 
22:01:45.046 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig()1
22:01:45.119 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig()2
22:01:45.120 | INFO  | Finished (in 0.082 sec): method io.seata.core.rpc.netty.RmRpcClient.getNettyPoolConfig() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:01:45.124 | DEBUG |  ... 
22:01:45.125 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getTransactionRole()
22:01:45.126 | INFO  |  -- Remaining time budget: 66275 ms, #remaining_methods: 16, budget for method: 4142 ms, solver timeout: 1000 ms, budget for symbolic execution: 2942 ms, budget for concrete execution: 1200 ms,  -- 
22:01:45.136 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getTransactionRole()1
22:01:45.214 | INFO  | Finished (in 0.088 sec): method io.seata.core.rpc.netty.RmRpcClient.getTransactionRole() 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:45.223 | DEBUG |  ... 
22:01:45.223 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)
22:01:45.223 | INFO  |  -- Remaining time budget: 66177 ms, #remaining_methods: 15, budget for method: 4411 ms, solver timeout: 1000 ms, budget for symbolic execution: 3211 ms, budget for concrete execution: 1200 ms,  -- 
22:01:45.230 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)1
22:01:45.270 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)2
22:01:45.289 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)3
22:01:46.733 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)4
22:01:46.935 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)5
22:01:48.435 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)
22:01:49.635 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String)
22:01:49.759 | INFO  | Finished (in 4.536 sec): method io.seata.core.rpc.netty.RmRpcClient.releaseChannel(Channel, String) 
<StatsForMethod> :
	#generatedTC=5
	WITH NO EXCEPTIONS
22:01:49.859 | DEBUG |  ... 
22:01:49.860 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String)
22:01:49.861 | INFO  |  -- Remaining time budget: 61540 ms, #remaining_methods: 14, budget for method: 4395 ms, solver timeout: 1000 ms, budget for symbolic execution: 3195 ms, budget for concrete execution: 1200 ms,  -- 
22:01:49.866 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String)1
22:01:49.892 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String)2
22:01:49.892 | INFO  | Finished (in 0.032 sec): method io.seata.core.rpc.netty.RmRpcClient.setTransactionServiceGroup(String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:01:49.893 | DEBUG |  ... 
22:01:49.893 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager)
22:01:49.894 | INFO  |  -- Remaining time budget: 61507 ms, #remaining_methods: 13, budget for method: 4731 ms, solver timeout: 1000 ms, budget for symbolic execution: 3531 ms, budget for concrete execution: 1200 ms,  -- 
22:01:49.899 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager)1
22:01:49.923 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager)2
22:01:49.923 | INFO  | Finished (in 0.030 sec): method io.seata.core.rpc.netty.RmRpcClient.setResourceManager(ResourceManager) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:01:49.925 | DEBUG |  ... 
22:01:49.925 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setApplicationId(String)
22:01:49.925 | INFO  |  -- Remaining time budget: 61475 ms, #remaining_methods: 12, budget for method: 5122 ms, solver timeout: 1000 ms, budget for symbolic execution: 3922 ms, budget for concrete execution: 1200 ms,  -- 
22:01:49.930 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setApplicationId(String)1
22:01:49.955 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setApplicationId(String)2
22:01:49.956 | INFO  | Finished (in 0.031 sec): method io.seata.core.rpc.netty.RmRpcClient.setApplicationId(String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:01:49.957 | DEBUG |  ... 
22:01:49.957 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.doConnect(String)
22:01:49.958 | INFO  |  -- Remaining time budget: 61443 ms, #remaining_methods: 11, budget for method: 5585 ms, solver timeout: 1000 ms, budget for symbolic execution: 4385 ms, budget for concrete execution: 1200 ms,  -- 
22:01:49.963 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.doConnect(String)1
22:01:54.343 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.doConnect(String)
22:01:55.544 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.doConnect(String)
22:01:55.908 | INFO  | Finished (in 5.950 sec): method io.seata.core.rpc.netty.RmRpcClient.doConnect(String) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
22:01:56.096 | DEBUG |  ... 
22:01:56.097 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)
22:01:56.097 | INFO  |  -- Remaining time budget: 55303 ms, #remaining_methods: 10, budget for method: 5530 ms, solver timeout: 1000 ms, budget for symbolic execution: 4330 ms, budget for concrete execution: 1200 ms,  -- 
22:01:56.106 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)1
22:01:56.135 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)2
22:01:56.155 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)3
22:01:56.195 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)4
22:01:56.403 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)5
22:01:58.170 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)6
22:02:00.427 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)
22:02:01.628 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String)
22:02:01.758 | INFO  | Finished (in 5.660 sec): method io.seata.core.rpc.netty.RmRpcClient.getExistAliveChannel(Channel, String) 
<StatsForMethod> :
	#generatedTC=6
	WITH NO EXCEPTIONS
22:02:01.980 | DEBUG |  ... 
22:02:01.980 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.sendRegisterMessage(String, Channel, String)
22:02:01.981 | INFO  |  -- Remaining time budget: 49420 ms, #remaining_methods: 9, budget for method: 5491 ms, solver timeout: 1000 ms, budget for symbolic execution: 4291 ms, budget for concrete execution: 1200 ms,  -- 
22:02:01.993 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.sendRegisterMessage(String, Channel, String)1
22:02:03.349 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ChildProcessError: Error in the child process |> java.lang.IllegalStateException: No field $__is_mock_null in class java.nio.ByteBuffer
	at com.huawei.utbot.framework.concrete.MethodMockController.<init>(MethodMockController.kt:38)
	at com.huawei.utbot.framework.concrete.MockValueConstructor.mockMethods(MockValueConstructor.kt:245)
	at com.huawei.utbot.framework.concrete.MockValueConstructor.mockStaticMethods(MockValueConstructor.kt:263)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:139)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation$invoke$$inlined$use$lambda$1.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.withStaticFields(UtExecutionInstrumentation.kt:225)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:137)
	at com.huawei.utbot.framework.concrete.UtExecutionInstrumentation.invoke(UtExecutionInstrumentation.kt:96)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.loop(ChildProcess.kt:114)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt:76)
	at com.huawei.utbot.instrumentation.process.ChildProcessKt.main(ChildProcess.kt)

	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:391) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
22:02:03.483 | ERROR | Symbolic execution FAILED ... <<stack trace duplicated>>
22:02:03.484 | INFO  | Finished (in 1.503 sec): method io.seata.core.rpc.netty.RmRpcClient.sendRegisterMessage(String, Channel, String) 
<StatsForMethod> :
	#generatedTC=1
	FAILED 2 time(s) with 1 different exception(s)"
22:02:03.503 | DEBUG |  ... 
22:02:03.503 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)
22:02:03.504 | INFO  |  -- Remaining time budget: 47897 ms, #remaining_methods: 8, budget for method: 5987 ms, solver timeout: 1000 ms, budget for symbolic execution: 4787 ms, budget for concrete execution: 1200 ms,  -- 
22:02:03.513 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)1
22:02:04.253 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)2
22:02:04.431 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)3
22:02:08.291 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)
22:02:09.491 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String)
22:02:09.668 | INFO  | Finished (in 6.165 sec): method io.seata.core.rpc.netty.RmRpcClient.registerResource(String, String) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:02:09.929 | DEBUG |  ... 
22:02:09.930 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getCustomerKeys()
22:02:09.930 | INFO  |  -- Remaining time budget: 41471 ms, #remaining_methods: 7, budget for method: 5924 ms, solver timeout: 1000 ms, budget for symbolic execution: 4724 ms, budget for concrete execution: 1200 ms,  -- 
22:02:09.941 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getCustomerKeys()1
22:02:09.972 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getCustomerKeys()2
22:02:09.973 | INFO  | Finished (in 0.043 sec): method io.seata.core.rpc.netty.RmRpcClient.getCustomerKeys() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:02:09.973 | DEBUG |  ... 
22:02:09.974 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String)
22:02:09.974 | INFO  |  -- Remaining time budget: 41426 ms, #remaining_methods: 6, budget for method: 6904 ms, solver timeout: 1000 ms, budget for symbolic execution: 5704 ms, budget for concrete execution: 1200 ms,  -- 
22:02:09.981 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String)1
22:02:10.006 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String)2
22:02:10.006 | INFO  | Finished (in 0.032 sec): method io.seata.core.rpc.netty.RmRpcClient.setCustomerKeys(String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:02:10.008 | DEBUG |  ... 
22:02:10.009 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)
22:02:10.010 | INFO  |  -- Remaining time budget: 41391 ms, #remaining_methods: 5, budget for method: 8278 ms, solver timeout: 1000 ms, budget for symbolic execution: 7078 ms, budget for concrete execution: 1200 ms,  -- 
22:02:10.015 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)1
22:02:10.040 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)2
22:02:10.061 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)3
22:02:17.087 | INFO  | |> Starting concrete execution for remaining state: io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)
22:02:18.288 | INFO  | (X) Cancelling concrete execution: io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager)
22:02:18.476 | INFO  | Finished (in 8.466 sec): method io.seata.core.rpc.netty.RmRpcClient.getMergedResourceKeys(ResourceManager) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
22:02:18.674 | DEBUG |  ... 
22:02:18.675 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getInstance(String, String)
22:02:18.675 | INFO  |  -- Remaining time budget: 32725 ms, #remaining_methods: 4, budget for method: 8181 ms, solver timeout: 1000 ms, budget for symbolic execution: 6981 ms, budget for concrete execution: 1200 ms,  -- 
22:02:18.680 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance(String, String)1
22:02:18.813 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance(String, String)2
22:02:18.813 | INFO  | Finished (in 0.138 sec): method io.seata.core.rpc.netty.RmRpcClient.getInstance(String, String) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:02:18.827 | DEBUG |  ... 
22:02:18.827 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.getInstance()
22:02:18.827 | INFO  |  -- Remaining time budget: 32573 ms, #remaining_methods: 3, budget for method: 10857 ms, solver timeout: 1000 ms, budget for symbolic execution: 9657 ms, budget for concrete execution: 1200 ms,  -- 
22:02:18.833 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance()1
22:02:18.893 | DEBUG | --new testCase collected, to generate: testIo.seata.core.rpc.netty.RmRpcClient.getInstance()2
22:02:18.935 | INFO  | Finished (in 0.108 sec): method io.seata.core.rpc.netty.RmRpcClient.getInstance() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
22:02:18.947 | DEBUG |  ... 
22:02:18.947 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig)
22:02:18.947 | INFO  |  -- Remaining time budget: 32453 ms, #remaining_methods: 2, budget for method: 16226 ms, solver timeout: 1000 ms, budget for symbolic execution: 15026 ms, budget for concrete execution: 1200 ms,  -- 
22:02:18.959 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ReadingFromKryoException: Failure reading from kryo
	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:392) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
Caused by: com.esotericsoftware.kryo.KryoException: Buffer underflow.
	at com.esotericsoftware.kryo.io.Input.require(Input.java:219) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.io.Input.readVarLong(Input.java:570) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:131) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:125) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:774) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.util.KryoHelper.readLong(KryoHelper.kt:36) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1$1.invokeSuspend(ConcreteExecutor.kt:256) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:38) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:253) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:101) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.concurrent.ThreadsKt$thread$thread$1.run(Thread.kt:30) ~[utbot-junit-contest-1.0.jar:?]
22:02:19.729 | INFO  | Finished (in 0.781 sec): method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig) 
<StatsForMethod> :
	#generatedTC=0
	FAILED 1 time(s) with 1 different exception(s)"
22:02:19.803 | DEBUG |  ... 
22:02:19.804 | INFO  | Started: method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig, EventExecutorGroup, ThreadPoolExecutor)
22:02:19.804 | INFO  |  -- Remaining time budget: 31597 ms, #remaining_methods: 1, budget for method: 31597 ms, solver timeout: 1000 ms, budget for symbolic execution: 30397 ms, budget for concrete execution: 1200 ms,  -- 
22:02:26.056 | ERROR | Symbolic execution FAILED
com.huawei.utbot.instrumentation.util.ReadingFromKryoException: Failure reading from kryo
	at com.huawei.utbot.instrumentation.ConcreteExecutor.executeAsync(ConcreteExecutor.kt:392) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$executeAsync$1.invokeSuspend(ConcreteExecutor.kt) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) [utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) [utbot-junit-contest-1.0.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_312]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_312]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_312]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_312]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_312]
Caused by: com.esotericsoftware.kryo.KryoException: Buffer underflow.
	at com.esotericsoftware.kryo.io.Input.require(Input.java:219) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.io.Input.readVarLong(Input.java:570) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:131) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer.read(DefaultSerializers.java:125) ~[utbot-junit-contest-1.0.jar:?]
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:774) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.util.KryoHelper.readLong(KryoHelper.kt:36) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1$1.invokeSuspend(ConcreteExecutor.kt:256) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:38) ~[utbot-junit-contest-1.0.jar:?]
	at kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:253) ~[utbot-junit-contest-1.0.jar:?]
	at com.huawei.utbot.instrumentation.ConcreteExecutor$restartIfNeeded$$inlined$bracket$lambda$1$1.invoke(ConcreteExecutor.kt:101) ~[utbot-junit-contest-1.0.jar:?]
	at kotlin.concurrent.ThreadsKt$thread$thread$1.run(Thread.kt:30) ~[utbot-junit-contest-1.0.jar:?]
22:02:26.828 | INFO  | Finished (in 7.024 sec): method io.seata.core.rpc.netty.RmRpcClient.<init>(NettyClientConfig, EventExecutorGroup, ThreadPoolExecutor) 
<StatsForMethod> :
	#generatedTC=0
	FAILED 1 time(s) with 1 different exception(s)"
22:02:26.908 | INFO  | Started: Flushing tests for [RmRpcClient] on disk
22:02:27.211 | INFO  | File size for RmRpcClientTest: 61 KB
22:02:27.212 | INFO  | Finished (in 0.304 sec): Flushing tests for [RmRpcClient] on disk 
22:02:27.213 | INFO  | Finished (in 77.778 sec): class io.seata.core.rpc.netty.RmRpcClient 
<StatsForClass> :
	canceled by timeout = false
	#methods = 28, 
	#methods started symbolic exploration = 28
	#methods with at least one TC = 26
	#methods with exceptions = 4
	#generated TC = 59
	#coverage = null
[READY]
