Started UtBot Contest, classfileDir = /var/benchmarks/projects/guava/guava/target/classes, classpathString=/var/benchmarks/projects/guava/guava/target/classes:/var/benchmarks/projects/guava/guava/target/guava-26.0-jre.jar:/var/benchmarks/projects/./guava/guava/target/dependency/checker-qual-2.5.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/error_prone_annotations-2.1.3.jar:/var/benchmarks/projects/guava/guava/target/dependency/j2objc-annotations-1.1.jar:/var/benchmarks/projects/guava/guava/target/dependency/jsr305-3.0.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/animal-sniffer-annotations-1.14.jar, outputDir=/home/utbot_mocks/temp/testcases, mocks=Other classes: Mockito
16:30:18.486 | INFO  | Started: warmup: kotlin reflection :: init
16:30:18.573 | INFO  | Finished (in 0.086 sec): warmup: kotlin reflection :: init 
[INIT]
>> [RUN] com.google.common.math.IntMath 120
16:30:18.582 | DEBUG | -----------------------------------------------------------------------------
16:30:18.583 | INFO  | Contest.runGeneration: Time budget: 120000 ms, Generation timeout=102000 ms, classpath=/var/benchmarks/projects/guava/guava/target/classes:/var/benchmarks/projects/guava/guava/target/guava-26.0-jre.jar:/var/benchmarks/projects/./guava/guava/target/dependency/checker-qual-2.5.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/error_prone_annotations-2.1.3.jar:/var/benchmarks/projects/guava/guava/target/dependency/j2objc-annotations-1.1.jar:/var/benchmarks/projects/guava/guava/target/dependency/jsr305-3.0.2.jar:/var/benchmarks/projects/guava/guava/target/dependency/animal-sniffer-annotations-1.14.jar, methodNameFilter=null
16:30:18.584 | INFO  | ClassUnderTest[ FQN: com.google.common.math.IntMath
    classfileDir: /var/benchmarks/projects/guava/guava/target/classes
    testClassSimpleName: IntMathTest
    generatedTestFile: /home/utbot_mocks/temp/testcases/com/google/common/math/IntMathTest.java
    generatedTestsSourcesDir: /home/utbot_mocks/temp/testcases
]
16:30:18.604 | INFO  | Started: class com.google.common.math.IntMath
16:30:18.605 | INFO  | Started: preparation class class com.google.common.math.IntMath: kotlin reflection :: run
16:30:18.623 | INFO  | Finished (in 0.018 sec): preparation class class com.google.common.math.IntMath: kotlin reflection :: run 
16:30:18.624 | INFO  | Started: 2nd optional soot initialization
16:30:18.625 | INFO  | Finished (in 0.001 sec): 2nd optional soot initialization 
16:30:18.632 | DEBUG |  ... 
16:30:18.642 | INFO  | Started: method com.google.common.math.IntMath.log2(int, RoundingMode)
16:30:18.643 | INFO  |  -- Remaining time budget: 101949 ms, #remaining_methods: 26, budget for method: 3921 ms, solver timeout: 1000 ms, budget for symbolic execution: 2721 ms, budget for concrete execution: 1200 ms,  -- 
16:30:18.950 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log2(int, RoundingMode)1
16:30:20.589 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log2(int, RoundingMode)2
16:30:21.360 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.log2(int, RoundingMode)
16:30:22.561 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.log2(int, RoundingMode)
16:30:22.733 | INFO  | Finished (in 4.090 sec): method com.google.common.math.IntMath.log2(int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:22.740 | DEBUG |  ... 
16:30:22.740 | INFO  | Started: method com.google.common.math.IntMath.mod(int, int)
16:30:22.741 | INFO  |  -- Remaining time budget: 97843 ms, #remaining_methods: 25, budget for method: 3913 ms, solver timeout: 1000 ms, budget for symbolic execution: 2713 ms, budget for concrete execution: 1200 ms,  -- 
16:30:22.747 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)1
16:30:22.793 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)2
16:30:22.882 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)3
16:30:22.893 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mod(int, int)4
16:30:22.894 | INFO  | Finished (in 0.153 sec): method com.google.common.math.IntMath.mod(int, int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
16:30:22.895 | DEBUG |  ... 
16:30:22.895 | INFO  | Started: method com.google.common.math.IntMath.gcd(int, int)
16:30:22.895 | INFO  |  -- Remaining time budget: 97688 ms, #remaining_methods: 24, budget for method: 4070 ms, solver timeout: 1000 ms, budget for symbolic execution: 2870 ms, budget for concrete execution: 1200 ms,  -- 
16:30:22.901 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)1
16:30:22.942 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)2
16:30:22.944 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)3
16:30:24.173 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.gcd(int, int)4
16:30:25.766 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.gcd(int, int)
16:30:26.967 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.gcd(int, int)
16:30:27.173 | INFO  | Finished (in 4.277 sec): method com.google.common.math.IntMath.gcd(int, int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
16:30:27.268 | DEBUG |  ... 
16:30:27.269 | INFO  | Started: method com.google.common.math.IntMath.saturatedAdd(int, int)
16:30:27.269 | INFO  |  -- Remaining time budget: 93314 ms, #remaining_methods: 23, budget for method: 4057 ms, solver timeout: 1000 ms, budget for symbolic execution: 2857 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.275 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedAdd(int, int)1
16:30:27.297 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedAdd(int, int)2
16:30:27.297 | INFO  | Finished (in 0.028 sec): method com.google.common.math.IntMath.saturatedAdd(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:27.298 | DEBUG |  ... 
16:30:27.298 | INFO  | Started: method com.google.common.math.IntMath.saturatedSubtract(int, int)
16:30:27.298 | INFO  |  -- Remaining time budget: 93285 ms, #remaining_methods: 22, budget for method: 4240 ms, solver timeout: 1000 ms, budget for symbolic execution: 3040 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.303 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedSubtract(int, int)1
16:30:27.322 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedSubtract(int, int)2
16:30:27.323 | INFO  | Finished (in 0.025 sec): method com.google.common.math.IntMath.saturatedSubtract(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:27.323 | DEBUG |  ... 
16:30:27.324 | INFO  | Started: method com.google.common.math.IntMath.isPowerOfTwo(int)
16:30:27.324 | INFO  |  -- Remaining time budget: 93259 ms, #remaining_methods: 21, budget for method: 4440 ms, solver timeout: 1000 ms, budget for symbolic execution: 3240 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.328 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)1
16:30:27.364 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)2
16:30:27.383 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)3
16:30:27.400 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPowerOfTwo(int)4
16:30:27.403 | INFO  | Finished (in 0.079 sec): method com.google.common.math.IntMath.isPowerOfTwo(int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
16:30:27.403 | DEBUG |  ... 
16:30:27.404 | INFO  | Started: method com.google.common.math.IntMath.floorPowerOfTwo(int)
16:30:27.404 | INFO  |  -- Remaining time budget: 93180 ms, #remaining_methods: 20, budget for method: 4659 ms, solver timeout: 1000 ms, budget for symbolic execution: 3459 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.410 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.floorPowerOfTwo(int)1
16:30:27.437 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.floorPowerOfTwo(int)2
16:30:27.438 | INFO  | Finished (in 0.034 sec): method com.google.common.math.IntMath.floorPowerOfTwo(int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:27.441 | DEBUG |  ... 
16:30:27.441 | INFO  | Started: method com.google.common.math.IntMath.ceilingPowerOfTwo(int)
16:30:27.441 | INFO  |  -- Remaining time budget: 93142 ms, #remaining_methods: 19, budget for method: 4902 ms, solver timeout: 1000 ms, budget for symbolic execution: 3702 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.448 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.ceilingPowerOfTwo(int)1
16:30:27.490 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.ceilingPowerOfTwo(int)2
16:30:27.670 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.ceilingPowerOfTwo(int)3
16:30:27.685 | INFO  | Finished (in 0.243 sec): method com.google.common.math.IntMath.ceilingPowerOfTwo(int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
16:30:27.691 | DEBUG |  ... 
16:30:27.692 | INFO  | Started: method com.google.common.math.IntMath.lessThanBranchFree(int, int)
16:30:27.692 | INFO  |  -- Remaining time budget: 92891 ms, #remaining_methods: 18, budget for method: 5160 ms, solver timeout: 1000 ms, budget for symbolic execution: 3960 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.699 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.lessThanBranchFree(int, int)1
16:30:27.718 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.lessThanBranchFree(int, int)2
16:30:27.718 | INFO  | Finished (in 0.026 sec): method com.google.common.math.IntMath.lessThanBranchFree(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:27.719 | DEBUG |  ... 
16:30:27.719 | INFO  | Started: method com.google.common.math.IntMath.log10Floor(int)
16:30:27.719 | INFO  |  -- Remaining time budget: 92864 ms, #remaining_methods: 17, budget for method: 5462 ms, solver timeout: 1000 ms, budget for symbolic execution: 4262 ms, budget for concrete execution: 1200 ms,  -- 
16:30:27.724 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10Floor(int)1
16:30:31.982 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.log10Floor(int)
16:30:32.195 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10Floor(int)2
16:30:32.221 | INFO  | Finished (in 4.502 sec): method com.google.common.math.IntMath.log10Floor(int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:32.305 | DEBUG |  ... 
16:30:32.305 | INFO  | Started: method com.google.common.math.IntMath.sqrtFloor(int)
16:30:32.305 | INFO  |  -- Remaining time budget: 88278 ms, #remaining_methods: 16, budget for method: 5517 ms, solver timeout: 1000 ms, budget for symbolic execution: 4317 ms, budget for concrete execution: 1200 ms,  -- 
16:30:32.310 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrtFloor(int)1
16:30:36.232 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrtFloor(int)2
16:30:36.623 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.sqrtFloor(int)
16:30:36.919 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrtFloor(int)3
16:30:36.920 | INFO  | Finished (in 4.615 sec): method com.google.common.math.IntMath.sqrtFloor(int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
16:30:36.952 | DEBUG |  ... 
16:30:36.953 | INFO  | Started: method com.google.common.math.IntMath.checkedAdd(int, int)
16:30:36.953 | INFO  |  -- Remaining time budget: 83630 ms, #remaining_methods: 15, budget for method: 5575 ms, solver timeout: 1000 ms, budget for symbolic execution: 4375 ms, budget for concrete execution: 1200 ms,  -- 
16:30:36.957 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedAdd(int, int)1
16:30:37.007 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedAdd(int, int)2
16:30:37.014 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedAdd(int, int)3
16:30:37.014 | INFO  | Finished (in 0.061 sec): method com.google.common.math.IntMath.checkedAdd(int, int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
16:30:37.015 | DEBUG |  ... 
16:30:37.015 | INFO  | Started: method com.google.common.math.IntMath.checkedSubtract(int, int)
16:30:37.016 | INFO  |  -- Remaining time budget: 83568 ms, #remaining_methods: 14, budget for method: 5969 ms, solver timeout: 1000 ms, budget for symbolic execution: 4769 ms, budget for concrete execution: 1200 ms,  -- 
16:30:37.020 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedSubtract(int, int)1
16:30:37.069 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedSubtract(int, int)2
16:30:37.077 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedSubtract(int, int)3
16:30:37.077 | INFO  | Finished (in 0.061 sec): method com.google.common.math.IntMath.checkedSubtract(int, int) 
<StatsForMethod> :
	#generatedTC=3
	WITH NO EXCEPTIONS
16:30:37.078 | DEBUG |  ... 
16:30:37.079 | INFO  | Started: method com.google.common.math.IntMath.checkedMultiply(int, int)
16:30:37.079 | INFO  |  -- Remaining time budget: 83505 ms, #remaining_methods: 13, budget for method: 6423 ms, solver timeout: 1000 ms, budget for symbolic execution: 5223 ms, budget for concrete execution: 1200 ms,  -- 
16:30:37.083 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedMultiply(int, int)1
16:30:38.192 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedMultiply(int, int)2
16:30:38.193 | INFO  | Finished (in 1.114 sec): method com.google.common.math.IntMath.checkedMultiply(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:38.194 | DEBUG |  ... 
16:30:38.194 | INFO  | Started: method com.google.common.math.IntMath.checkedPow(int, int)
16:30:38.194 | INFO  |  -- Remaining time budget: 82389 ms, #remaining_methods: 12, budget for method: 6865 ms, solver timeout: 1000 ms, budget for symbolic execution: 5665 ms, budget for concrete execution: 1200 ms,  -- 
16:30:38.198 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)1
16:30:38.267 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)2
16:30:38.287 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)3
16:30:38.303 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)4
16:30:38.325 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)5
16:30:38.360 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)6
16:30:38.382 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)7
16:30:38.387 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)8
16:30:38.408 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)9
16:30:38.459 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)10
16:30:38.464 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)11
16:30:38.468 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)12
16:30:38.590 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)13
16:30:38.704 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)14
16:30:38.858 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)15
16:30:40.128 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)16
16:30:43.629 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.checkedPow(int, int)17
16:30:43.859 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.checkedPow(int, int)
16:30:45.060 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.checkedPow(int, int)
16:30:45.216 | INFO  | Finished (in 7.022 sec): method com.google.common.math.IntMath.checkedPow(int, int) 
<StatsForMethod> :
	#generatedTC=17
	WITH NO EXCEPTIONS
16:30:45.266 | DEBUG |  ... 
16:30:45.267 | INFO  | Started: method com.google.common.math.IntMath.saturatedMultiply(int, int)
16:30:45.267 | INFO  |  -- Remaining time budget: 75316 ms, #remaining_methods: 11, budget for method: 6846 ms, solver timeout: 1000 ms, budget for symbolic execution: 5646 ms, budget for concrete execution: 1200 ms,  -- 
16:30:45.271 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedMultiply(int, int)1
16:30:45.290 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedMultiply(int, int)2
16:30:45.290 | INFO  | Finished (in 0.023 sec): method com.google.common.math.IntMath.saturatedMultiply(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:30:45.291 | DEBUG |  ... 
16:30:45.292 | INFO  | Started: method com.google.common.math.IntMath.saturatedPow(int, int)
16:30:45.292 | INFO  |  -- Remaining time budget: 75292 ms, #remaining_methods: 10, budget for method: 7529 ms, solver timeout: 1000 ms, budget for symbolic execution: 6329 ms, budget for concrete execution: 1200 ms,  -- 
16:30:45.295 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)1
16:30:45.362 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)2
16:30:45.408 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)3
16:30:45.412 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)4
16:30:45.418 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)5
16:30:45.437 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)6
16:30:45.442 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)7
16:30:45.458 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)8
16:30:45.491 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)9
16:30:45.528 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)10
16:30:45.530 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)11
16:30:45.552 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)12
16:30:45.557 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)13
16:30:45.562 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)14
16:30:45.588 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)15
16:30:45.665 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)16
16:30:45.735 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.saturatedPow(int, int)17
16:30:51.621 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.saturatedPow(int, int)
16:30:52.822 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.saturatedPow(int, int)
16:30:52.956 | INFO  | Finished (in 7.664 sec): method com.google.common.math.IntMath.saturatedPow(int, int) 
<StatsForMethod> :
	#generatedTC=17
	WITH NO EXCEPTIONS
16:30:52.987 | DEBUG |  ... 
16:30:52.988 | INFO  | Started: method com.google.common.math.IntMath.factorial(int)
16:30:52.988 | INFO  |  -- Remaining time budget: 67596 ms, #remaining_methods: 9, budget for method: 7510 ms, solver timeout: 1000 ms, budget for symbolic execution: 6310 ms, budget for concrete execution: 1200 ms,  -- 
16:30:52.991 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)1
16:30:53.119 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)2
16:30:53.145 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)3
16:30:53.169 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.factorial(int)4
16:30:53.170 | INFO  | Finished (in 0.182 sec): method com.google.common.math.IntMath.factorial(int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
16:30:53.177 | DEBUG |  ... 
16:30:53.178 | INFO  | Started: method com.google.common.math.IntMath.binomial(int, int)
16:30:53.178 | INFO  |  -- Remaining time budget: 67405 ms, #remaining_methods: 8, budget for method: 8425 ms, solver timeout: 1000 ms, budget for symbolic execution: 7225 ms, budget for concrete execution: 1200 ms,  -- 
16:30:53.187 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)1
16:30:53.577 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)2
16:30:54.646 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)3
16:30:55.713 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.binomial(int, int)4
16:30:59.963 | INFO  | Finished (in 6.784 sec): method com.google.common.math.IntMath.binomial(int, int) 
<StatsForMethod> :
	#generatedTC=4
	WITH NO EXCEPTIONS
16:31:00.003 | DEBUG |  ... 
16:31:00.003 | INFO  | Started: method com.google.common.math.IntMath.mean(int, int)
16:31:00.004 | INFO  |  -- Remaining time budget: 60580 ms, #remaining_methods: 7, budget for method: 8654 ms, solver timeout: 1000 ms, budget for symbolic execution: 7454 ms, budget for concrete execution: 1200 ms,  -- 
16:31:00.007 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mean(int, int)1
16:31:00.027 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.mean(int, int)2
16:31:00.028 | INFO  | Finished (in 0.024 sec): method com.google.common.math.IntMath.mean(int, int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:31:00.029 | DEBUG |  ... 
16:31:00.029 | INFO  | Started: method com.google.common.math.IntMath.isPrime(int)
16:31:00.029 | INFO  |  -- Remaining time budget: 60554 ms, #remaining_methods: 6, budget for method: 10092 ms, solver timeout: 1000 ms, budget for symbolic execution: 8892 ms, budget for concrete execution: 1200 ms,  -- 
16:31:00.037 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPrime(int)1
16:31:00.058 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.isPrime(int)2
16:31:00.058 | INFO  | Finished (in 0.029 sec): method com.google.common.math.IntMath.isPrime(int) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:31:00.059 | DEBUG |  ... 
16:31:00.059 | INFO  | Started: method com.google.common.math.IntMath.sqrt(int, RoundingMode)
16:31:00.059 | INFO  |  -- Remaining time budget: 60524 ms, #remaining_methods: 5, budget for method: 12104 ms, solver timeout: 1000 ms, budget for symbolic execution: 10904 ms, budget for concrete execution: 1200 ms,  -- 
16:31:00.063 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.sqrt(int, RoundingMode)1
16:31:10.964 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.sqrt(int, RoundingMode)
16:31:12.164 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.sqrt(int, RoundingMode)
16:31:12.301 | INFO  | Finished (in 12.241 sec): method com.google.common.math.IntMath.sqrt(int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=1
	WITH NO EXCEPTIONS
16:31:12.654 | DEBUG |  ... 
16:31:12.654 | INFO  | Started: method com.google.common.math.IntMath.log10(int, RoundingMode)
16:31:12.654 | INFO  |  -- Remaining time budget: 47929 ms, #remaining_methods: 4, budget for method: 11982 ms, solver timeout: 1000 ms, budget for symbolic execution: 10782 ms, budget for concrete execution: 1200 ms,  -- 
16:31:12.658 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10(int, RoundingMode)1
16:31:14.369 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.log10(int, RoundingMode)2
16:31:23.437 | INFO  | |> Starting concrete execution for remaining state: com.google.common.math.IntMath.log10(int, RoundingMode)
16:31:24.637 | INFO  | (X) Cancelling concrete execution: com.google.common.math.IntMath.log10(int, RoundingMode)
16:31:25.304 | INFO  | Finished (in 12.650 sec): method com.google.common.math.IntMath.log10(int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:31:25.455 | DEBUG |  ... 
16:31:25.456 | INFO  | Started: method com.google.common.math.IntMath.pow(int, int)
16:31:25.456 | INFO  |  -- Remaining time budget: 35128 ms, #remaining_methods: 3, budget for method: 11709 ms, solver timeout: 1000 ms, budget for symbolic execution: 10509 ms, budget for concrete execution: 1200 ms,  -- 
16:31:25.459 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)1
16:31:25.521 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)2
16:31:25.540 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)3
16:31:25.543 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)4
16:31:25.560 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)5
16:31:25.579 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)6
16:31:25.580 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)7
16:31:25.583 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)8
16:31:25.602 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)9
16:31:25.635 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)10
16:31:25.640 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)11
16:31:25.657 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)12
16:31:25.660 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)13
16:31:25.662 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)14
16:31:25.681 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.pow(int, int)15
16:31:25.684 | INFO  | Finished (in 0.228 sec): method com.google.common.math.IntMath.pow(int, int) 
<StatsForMethod> :
	#generatedTC=15
	WITH NO EXCEPTIONS
16:31:25.685 | DEBUG |  ... 
16:31:25.686 | INFO  | Started: method com.google.common.math.IntMath.divide(int, int, RoundingMode)
16:31:25.686 | INFO  |  -- Remaining time budget: 34898 ms, #remaining_methods: 2, budget for method: 17449 ms, solver timeout: 1000 ms, budget for symbolic execution: 16249 ms, budget for concrete execution: 1200 ms,  -- 
16:31:25.689 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)1
16:31:25.876 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)2
16:31:26.029 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)3
16:31:29.742 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)4
16:31:39.368 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.divide(int, int, RoundingMode)5
16:31:39.368 | INFO  | Finished (in 13.682 sec): method com.google.common.math.IntMath.divide(int, int, RoundingMode) 
<StatsForMethod> :
	#generatedTC=5
	WITH NO EXCEPTIONS
16:31:39.503 | DEBUG |  ... 
16:31:39.504 | INFO  | Started: method com.google.common.math.IntMath.<init>()
16:31:39.504 | INFO  |  -- Remaining time budget: 21079 ms, #remaining_methods: 1, budget for method: 21079 ms, solver timeout: 1000 ms, budget for symbolic execution: 19879 ms, budget for concrete execution: 1200 ms,  -- 
16:31:39.508 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.<init>()1
16:31:39.529 | DEBUG | --new testCase collected, to generate: testCom.google.common.math.IntMath.<init>()2
16:31:39.530 | INFO  | Finished (in 0.026 sec): method com.google.common.math.IntMath.<init>() 
<StatsForMethod> :
	#generatedTC=2
	WITH NO EXCEPTIONS
16:31:39.535 | INFO  | Started: Flushing tests for [IntMath] on disk
16:31:39.847 | INFO  | File size for IntMathTest: 56 KB
16:31:39.849 | INFO  | Finished (in 0.313 sec): Flushing tests for [IntMath] on disk 
16:31:39.850 | INFO  | Finished (in 81.245 sec): class com.google.common.math.IntMath 
<StatsForClass> :
	canceled by timeout = false
	#methods = 26, 
	#methods started symbolic exploration = 26
	#methods with at least one TC = 26
	#methods with exceptions = 0
	#generated TC = 111
	#coverage = null
[READY]
